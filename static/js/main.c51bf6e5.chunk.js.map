{"version":3,"sources":["kirusa.png","picture.jpg","purohit.png","about.js","skillCard.js","skills.js","blogCard.js","experience.js","main_portfolio.js","details.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","About","props","className","skillCard","skill","Experience","src","Kirusa","purohit","Main","Display","data","arraySection","map","item","pos","key","onClick","onClickDisplay","pic","showAboutSection","showSkills","showExperience","details","App","state","setState","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c51bf6e5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/kirusa.a9436d74.png\";","module.exports = __webpack_public_path__ + \"static/media/picture.f0efe095.jpg\";","module.exports = __webpack_public_path__ + \"static/media/purohit.98365b99.png\";","import React from 'react'\r\nimport Main from './main_portfolio'\r\nimport './App.css'\r\n\r\nconst About=(props)=>{\r\n\treturn(\r\n\t\t<div>\r\n\t\t\r\n\t\t<div className='page'>\r\n\t\t<h1 className=\"heading\">About Me</h1>\r\n\t\t<p className='quote'>If you love life ,don't waste time,\r\n\t\t                     for time is what life made of</p>\r\n        \r\n        <div className='hline3'></div>\r\n    <div className='intro'>\r\n        <p > A learner by nature and a developer by passion , UI/UX design enthusiast , full stack web and android developer, programmer , content writer ,\r\n          and head Coordinator of \"Prashnatantra\".</p>\r\n          <p>Good at communicating with clients,developers and designers. \r\n           A designer with a zest for designing beautiful and functional user experiences .\r\n          </p>\r\n      </div>    \r\n\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default About","import React from 'react'\r\nimport  './App.css'\r\nimport './skillCard.css'\r\nconst skillCard =(props)=>{\r\n      \r\n      return(\r\n         <div className='Card'>\r\n         <p className='one'>Java</p>\r\n          <p className='two'>C++</p>\r\n          <p className='three'>C</p>\r\n          <p className='four'>Android</p>\r\n          <p className='five'>Data Structures</p>\r\n           <p className='six'>Programming</p>\r\n           <p className='seven'>Databases</p>\r\n            <p className='eight'>Flutter</p>\r\n             <p className='nine'>React.js</p>\r\n             <p className='ten'>Javascript</p>\r\n              <p className='eleven'>CSS</p>\r\n              <p className='twelve'>HTML5</p>\r\n\r\n         </div>\r\n      \t);\r\n    \r\n}\r\n\r\nexport default skillCard","import React from 'react'\r\nimport  './App.css'\r\nimport SkillCard from './skillCard'\r\nconst skill =(props)=>{\r\n      \r\n      return(\r\n         <div className='page'>\r\n           <h1>Skills</h1>\r\n           <p className='quote'>Build your skills not your resume</p>\r\n           <div className='hline4'></div>\r\n           <SkillCard/>\r\n           </div>\r\n      \t);\r\n    \r\n}\r\n\r\nexport default skill\r\n","import React from 'react'\r\nimport Main from './main_portfolio'\r\nimport './App.css'\r\nimport BlogCard from './blogCard'\r\nimport Kirusa from './kirusa.png'\r\nimport purohit from './purohit.png'\r\n\r\nimport './experience.css'\r\nconst Experience=(props)=>{\r\n\treturn(\r\n\t\t<div>\r\n\t\t<div className='Card1'>\r\n        < img className='logo' src={Kirusa}/>\r\n\t\t<h3>UI/UX Design Intern</h3>\r\n\t\t<p>Kirusa | Nov 2019-Dec 2019</p>\r\n\t\t</div >\r\n\r\n\t\t<div className='Card2'>\r\n\t\t<img className='logo1' src={purohit}/> \r\n\t\t<h3>Intern--Mobile App Dev </h3>\r\n\t\t<p>PurohitJi | Sep 2019-Nov 2019 </p>\r\n\t\t</div>\r\n\r\n\t\t<div className='Card3'>\r\n        < img className='logo2' src={Kirusa}/>\r\n\t\t<h3>Android Development Intern</h3>\r\n\t\t<p>Kirusa | May 2019-July 2019</p>\r\n\t\t</div >\r\n\r\n\r\n\r\n\r\n\t    </div>\r\n\t);\r\n}\r\n\r\nexport default Experience","import React from 'react'\r\nimport Main from './main_portfolio'\r\n\r\nimport Kirusa from './kirusa.png'\r\nimport BlogCard from './blogCard'\r\nconst Experience=(props)=>{\r\n\treturn(\r\n\t\t<div>\r\n\t\t\r\n\t\t<div className='page'>\r\n\t\t\r\n\r\n\t\t<h1>Experience</h1>\r\n\t\t<p className=\"quote\">Experience can't be taught</p>\r\n        <div className='hline4'></div>\r\n        <BlogCard/>\r\n\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Experience","import React,{Component} from 'react';\r\nimport About from './about'\r\nimport pic from './picture.jpg'\r\nimport Skill from './skills'\r\nimport Experience from './experience'\r\nimport './App.css'\r\nconst Main=(props)=>{\r\n           \r\n           const Display=props.data.arraySection.map((item,pos)=>{\r\n            return(\r\n              <div className='btn'>\r\n            <button key={pos} onClick={()=>props.onClickDisplay(pos)}  className='btn'>{item}</button>\r\n            <br/>\r\n            <br/>\r\n            </div>\r\n            );\r\n           })\r\n                \r\n                    \r\n\t\t\r\n\r\n                  return(\r\n\r\n             <div className=\"mainCard\">\r\n             <img  className=\"image\" src={pic}/>\r\n             <div className='circle'></div>\r\n             <div className='line'></div>\r\n             <div className='name'>\r\n             <p> Yashwanth Manivannan</p>\r\n             </div>\r\n             <div className='hline'></div>\r\n             <div className='content'>\r\n              {Display}\r\n             \r\n             {/* <button   className='btn'>About Me</button>\r\n              <br/>\r\n              <br/>\r\n              <button   className='btn'>Skills</button>\r\n              <br/>\r\n              <br/>\r\n              <button   className='btn'>Experience</button>\r\n            */}\r\n             </div>\r\n\r\n             <div className='hline2'></div>\r\n             <div>\r\n                 {props.showAboutSection?<About/>:\"\"}\r\n                 {props.showSkills?<Skill/>:\"\"}\r\n                 {props.showExperience?<Experience/>:\"\"}\r\n             </div>\r\n             \r\n             </div>\r\n             \r\n             \r\n\r\n                  \r\n\r\n\r\n            );\r\n\t\t\r\n}\r\n\r\nexport default Main","const details= {\r\n  arraySection: [\r\n       \r\n             'About Me','Skills','Experience'\r\n\r\n   ]\r\n}\r\nexport default details;","import React,{Component} from 'react';\nimport Main from './main_portfolio' \nimport About from './about'\nimport './App.css';\nimport details from './details'\nclass App extends Component{\n\n\t\n\t\t\n\t\n\t    state={\n\t    \tdata:details,\n            showAboutSection:true,\n            showSkills:false,\n            showExperience:false,\n\t\t}\n\t\n\n    onClickDisplay=(pos)=>{\n    \tif(pos===0)\n    \t{\n    \t\tthis.setState({\n    \t\t\tshowAboutSection:true,\n            showSkills:false,\n            showExperience:false,\n\n    \t\t})\n    \t}\n    \telse if(pos===1)\n    \t{\n    \t\tthis.setState({\n    \t\t\tshowAboutSection:false,\n            showSkills:true,\n            showExperience:false,\n    \t\t})\n    \t}\n    \telse{\n    \t\tthis.setState({\n    \t\t\tshowAboutSection:false,\n            showSkills:false,\n            showExperience:true,\n\n    \t\t})    \t}\n    }\n    \n\n   render(){\n    return(\n         <div className='App '>\n          <Main data={this.state.data} onClickDisplay={this.onClickDisplay} \n          showAboutSection={this.state.showAboutSection}\n          showSkills={this.state.showSkills}\n          showExperience={this.state.showExperience}\n          />\n          \n           \n          </div>\n      );\n   }\n\n\n\n  }\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}